# MediaPipe graph that performs face blendshape with TensorFlow Lite on CPU.

# Input image. (ImageFrame)
input_stream: "input_video"

# Collection of detected/processed faces, each represented as a list of
# landmarks. (ClassificationList)
# output_stream: "blendshapes"

output_stream: "blendshapes"

# Defines side packets for further use in the graph.
node {
  calculator: "ConstantSidePacketCalculator"
  output_side_packet: "PACKET:0:num_faces"
  output_side_packet: "PACKET:1:with_attention"
  node_options: {
    [type.googleapis.com/mediapipe.ConstantSidePacketCalculatorOptions]: {
      packet { int_value: 1 }
      packet { bool_value: true }
    }
  }
}

# Subgraph that detects faces and corresponding landmarks.
node {
  calculator: "FaceLandmarkFrontCpu"
  input_stream: "IMAGE:input_video"
  input_side_packet: "NUM_FACES:num_faces"
  input_side_packet: "WITH_ATTENTION:with_attention"
  output_stream: "LANDMARKS:multi_face_landmarks"
  output_stream: "ROIS_FROM_LANDMARKS:face_rects_from_landmarks"
  output_stream: "DETECTIONS:face_detections"
  output_stream: "ROIS_FROM_DETECTIONS:face_rects_from_detections"
}

# Calculate size of the image.
node {
  calculator: "ImagePropertiesCalculator"
  input_stream: "IMAGE:input_video"
  output_stream: "SIZE:image_size"
}

node {
  calculator: "SplitNormalizedLandmarkListVectorCalculator"
  input_stream: "multi_face_landmarks"
  output_stream: "face_landmarks"
  node_options: {
    [type.googleapis.com/mediapipe.SplitVectorCalculatorOptions] {
      ranges: { begin: 0 end: 1 }
      element_only: true
    }
  }
}

node {
  calculator: "SplitNormalizedLandmarkListCalculator"
  input_stream: "face_landmarks"
  output_stream: "blendshape_landmarks"
  node_options: {
    [type.googleapis.com/mediapipe.SplitVectorCalculatorOptions] {
      ranges: { begin: 0 end: 1 }
      ranges: { begin: 1 end: 2 }
      ranges: { begin: 4 end: 9 }
      ranges: { begin: 10 end: 11 }
      ranges: { begin: 13 end: 15 }
      ranges: { begin: 17 end: 18 }
      ranges: { begin: 21 end: 22 }
      ranges: { begin: 33 end: 34 }
      ranges: { begin: 37 end: 38 }
      ranges: { begin: 39 end: 41 }
      ranges: { begin: 46 end: 47 }
      ranges: { begin: 52 end: 56 }
      ranges: { begin: 58 end: 59 }
      ranges: { begin: 61 end: 62 }
      ranges: { begin: 63 end: 64 }
      ranges: { begin: 65 end: 68 }
      ranges: { begin: 70 end: 71 }
      ranges: { begin: 78 end: 79 }
      ranges: { begin: 80 end: 83 }
      ranges: { begin: 84 end: 85 }
      ranges: { begin: 87 end: 89 }
      ranges: { begin: 91 end: 92 }
      ranges: { begin: 93 end: 94 }
      ranges: { begin: 95 end: 96 }
      ranges: { begin: 103 end: 104 }
      ranges: { begin: 105 end: 106 }
      ranges: { begin: 107 end: 108 }
      ranges: { begin: 109 end: 110 }
      ranges: { begin: 127 end: 128 }
      ranges: { begin: 132 end: 134 }
      ranges: { begin: 136 end: 137 }
      ranges: { begin: 144 end: 147 }
      ranges: { begin: 148 end: 151 }
      ranges: { begin: 152 end: 156 }
      ranges: { begin: 157 end: 164 }
      ranges: { begin: 168 end: 169 }
      ranges: { begin: 172 end: 174 }
      ranges: { begin: 176 end: 177 }
      ranges: { begin: 178 end: 179 }
      ranges: { begin: 181 end: 182 }
      ranges: { begin: 185 end: 186 }
      ranges: { begin: 191 end: 192 }
      ranges: { begin: 195 end: 196 }
      ranges: { begin: 197 end: 198 }
      ranges: { begin: 234 end: 235 }
      ranges: { begin: 246 end: 247 }
      ranges: { begin: 249 end: 250 }
      ranges: { begin: 251 end: 252 }
      ranges: { begin: 263 end: 264 }
      ranges: { begin: 267 end: 268 }
      ranges: { begin: 269 end: 271 }
      ranges: { begin: 276 end: 277 }
      ranges: { begin: 282 end: 286 }
      ranges: { begin: 288 end: 289 }
      ranges: { begin: 291 end: 292 }
      ranges: { begin: 293 end: 294 }
      ranges: { begin: 295 end: 298 }
      ranges: { begin: 300 end: 301 }
      ranges: { begin: 308 end: 309 }
      ranges: { begin: 310 end: 313 }
      ranges: { begin: 314 end: 315 }
      ranges: { begin: 317 end: 319 }
      ranges: { begin: 321 end: 322 }
      ranges: { begin: 323 end: 325 }
      ranges: { begin: 332 end: 333 }
      ranges: { begin: 334 end: 335 }
      ranges: { begin: 336 end: 337 }
      ranges: { begin: 338 end: 339 }
      ranges: { begin: 356 end: 357 }
      ranges: { begin: 361 end: 363 }
      ranges: { begin: 365 end: 366 }
      ranges: { begin: 373 end: 376 }
      ranges: { begin: 377 end: 383 }
      ranges: { begin: 384 end: 391 }
      ranges: { begin: 397 end: 399 }
      ranges: { begin: 400 end: 401 }
      ranges: { begin: 402 end: 403 }
      ranges: { begin: 405 end: 406 }
      ranges: { begin: 409 end: 410 }
      ranges: { begin: 415 end: 416 }
      ranges: { begin: 454 end: 455 }
      ranges: { begin: 466 end: 467 }
      ranges: { begin: 468 end: 478 }
      combine_outputs: true
    }
  }
}

node {
    calculator: "LandmarksToTensorCalculator"
    input_stream: "NORM_LANDMARKS:blendshape_landmarks"
    input_stream: "IMAGE_SIZE:image_size"
    output_stream: "TENSORS:tensors"
    options: {
        [mediapipe.LandmarksToTensorCalculatorOptions.ext] {
            attributes: [ X, Y]
            flatten: false
        }
    }
}

node {
  calculator: "InferenceCalculator"
  input_stream: "TENSORS:tensors"
  output_stream: "TENSORS:output_tensors"
  options: {
    [mediapipe.InferenceCalculatorOptions.ext] {
      model_path: "mediapipe/modules/face_blendshape/face_blendshapes.tflite"
      delegate {
        xnnpack {}
      }
    }
  }
}

# Splits a vector of tensors into multiple vectors.
node {
  calculator: "SplitTensorVectorCalculator"
  input_stream: "output_tensors"
  output_stream: "blendshape_tensors"
  options: {
    [mediapipe.SplitVectorCalculatorOptions.ext] {
      ranges: { begin: 0 end: 1 }
      combine_outputs: true
    }
  }
}

node {
    calculator: "TensorsToClassificationCalculator"
    input_stream: "TENSORS:blendshape_tensors"
    output_stream: "CLASSIFICATIONS:blendshapes"
    options {
      [mediapipe.TensorsToClassificationCalculatorOptions.ext] {
        top_k: 0
        min_score_threshold: -1.0
        label_map {
          entries { id: 0,  label: "_neutral" }
          entries { id: 1,  label: "browDownLeft" }
          entries { id: 2,  label: "browDownRight" }
          entries { id: 3,  label: "browInnerUp" }
          entries { id: 4,  label: "browOuterUpLeft" }
          entries { id: 5,  label: "browOuterUpRight" }
          entries { id: 6,  label: "cheekPuff" }
          entries { id: 7,  label: "cheekSquintLeft" }
          entries { id: 8,  label: "cheekSquintRight" }
          entries { id: 9,  label: "eyeBlinkLeft" }
          entries { id: 10, label: "eyeBlinkRight" }
          entries { id: 11, label: "eyeLookDownLeft" }
          entries { id: 12, label: "eyeLookDownRight" }
          entries { id: 13, label: "eyeLookInLeft" }
          entries { id: 14, label: "eyeLookInRight" }
          entries { id: 15, label: "eyeLookOutLeft" }
          entries { id: 16, label: "eyeLookOutRight" }
          entries { id: 17, label: "eyeLookUpLeft" }
          entries { id: 18, label: "eyeLookUpRight" }
          entries { id: 19, label: "eyeSquintLeft" }
          entries { id: 20, label: "eyeSquintRight" }
          entries { id: 21, label: "eyeWideLeft" }
          entries { id: 22, label: "eyeWideRight" }
          entries { id: 23, label: "jawForward" }
          entries { id: 24, label: "jawLeft" }
          entries { id: 25, label: "jawOpen" }
          entries { id: 26, label: "jawRight" }
          entries { id: 27, label: "mouthClose" }
          entries { id: 28, label: "mouthDimpleLeft" }
          entries { id: 29, label: "mouthDimpleRight" }
          entries { id: 30, label: "mouthFrownLeft" }
          entries { id: 31, label: "mouthFrownRight" }
          entries { id: 32, label: "mouthFunnel" }
          entries { id: 33, label: "mouthLeft" }
          entries { id: 34, label: "mouthLowerDownLeft" }
          entries { id: 35, label: "mouthLowerDownRight" }
          entries { id: 36, label: "mouthPressLeft" }
          entries { id: 37, label: "mouthPressRight" }
          entries { id: 38, label: "mouthPucker" }
          entries { id: 39, label: "mouthRight" }
          entries { id: 40, label: "mouthRollLower" }
          entries { id: 41, label: "mouthRollUpper" }
          entries { id: 42, label: "mouthShrugLower" }
          entries { id: 43, label: "mouthShrugUpper" }
          entries { id: 44, label: "mouthSmileLeft" }
          entries { id: 45, label: "mouthSmileRight" }
          entries { id: 46, label: "mouthStretchLeft" }
          entries { id: 47, label: "mouthStretchRight" }
          entries { id: 48, label: "mouthUpperUpLeft" }
          entries { id: 49, label: "mouthUpperUpRight" }
          entries { id: 50, label: "noseSneerLeft" }
          entries { id: 51, label: "noseSneerRight" }
        }
      }
    }
}

# node {
#   calculator: "mediapipe.tasks.vision.face_landmarker.FaceBlendshapesGraph"
#   input_stream: "LANDMARKS:face_landmarks"
#   input_stream: "IMAGE_SIZE:image_size"
#   output_stream: "BLENDSHAPES:blendshapes"
#   options {
#   [mediapipe.tasks.vision.face_landmarker.proto.FaceBlendshapesGraphOptions.ext] {
#       base_options {
#         model_asset {
#           file_name: "mediapipe/modules/face_blendshape/face_blendshapes.tflite"
#         }
#       }
#     }
#   }
# }