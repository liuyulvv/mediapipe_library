// Copyright 2023 The MediaPipe Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package com.google.mediapipe.tasks.vision.imagesegmenter;

import com.google.auto.value.AutoValue;
import com.google.mediapipe.framework.image.MPImage;
import com.google.mediapipe.tasks.core.TaskResult;
import java.util.Collections;
import java.util.List;

/** Represents the segmentation results generated by {@link ImageSegmenter}. */
@AutoValue
public abstract class ImageSegmenterResult implements TaskResult {

  /**
   * Creates an {@link ImageSegmenterResult} instance from a list of segmentation MPImage.
   *
   * @param segmentations a {@link List} of MPImage representing the segmented masks. If OutputType
   *     is CATEGORY_MASK, the masks will be in IMAGE_FORMAT_ALPHA format. If OutputType is
   *     CONFIDENCE_MASK, the masks will be in IMAGE_FORMAT_VEC32F1 format.
   * @param timestampMs a timestamp for this result.
   */
  // TODO: consolidate output formats across platforms.
  public static ImageSegmenterResult create(List<MPImage> segmentations, long timestampMs) {
    return new AutoValue_ImageSegmenterResult(
        Collections.unmodifiableList(segmentations), timestampMs);
  }

  public abstract List<MPImage> segmentations();

  @Override
  public abstract long timestampMs();
}
